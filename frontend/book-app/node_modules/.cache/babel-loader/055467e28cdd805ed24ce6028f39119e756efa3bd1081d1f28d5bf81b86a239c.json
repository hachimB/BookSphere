{"ast":null,"code":"var _jsxFileName = \"/home/a/BookSphere/frontend/book-app/src/components/AddBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport QuillEditor from './QuillEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBook = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const handleSubmit = async () => {\n    const bookData = {\n      title,\n      author,\n      content\n    };\n    const token = Cookies.get('token'); // Retrieve the token from cookies\n    console.log('Token:', token); // Log the token\n\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/books', bookData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Ensure token is included in headers\n        }\n      });\n      console.log('Response status:', response.status);\n      if (response.status === 201) {\n        console.log('Book added successfully:', response.data);\n        // Optionally, clear input fields after successful submission\n        setTitle('');\n        setAuthor('');\n        setContent('');\n      } else {\n        console.error('Failed to add book:', response.data);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a New Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Author\",\n      value: author,\n      onChange: e => setAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuillEditor, {\n      content: content,\n      setContent: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBook, \"/6m1bnfiU0FGQX0ip3/UZvY4l6o=\");\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["React","useState","axios","Cookies","QuillEditor","jsxDEV","_jsxDEV","AddBook","_s","content","setContent","title","setTitle","author","setAuthor","handleSubmit","bookData","token","get","console","log","error","response","post","headers","status","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/a/BookSphere/frontend/book-app/src/components/AddBook.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport QuillEditor from './QuillEditor';\n\nconst AddBook = () => {\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleSubmit = async () => {\n    const bookData = {\n      title,\n      author,\n      content,\n    };\n  \n    const token = Cookies.get('token'); // Retrieve the token from cookies\n    console.log('Token:', token); // Log the token\n  \n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n  \n    try {\n      const response = await axios.post('http://localhost:5000/api/books', bookData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`, // Ensure token is included in headers\n        },\n      });\n  \n      console.log('Response status:', response.status);\n  \n      if (response.status === 201) {\n        console.log('Book added successfully:', response.data);\n        // Optionally, clear input fields after successful submission\n        setTitle('');\n        setAuthor('');\n        setContent('');\n      } else {\n        console.error('Failed to add book:', response.data);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Add a New Book</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Author\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n      />\n      <QuillEditor content={content} setContent={setContent} />\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default AddBook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}