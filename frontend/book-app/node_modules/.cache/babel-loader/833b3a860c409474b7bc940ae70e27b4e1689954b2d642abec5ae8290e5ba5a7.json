{"ast":null,"code":"var _jsxFileName = \"/home/a/BookSphere/frontend/book-app/src/components/AddBook.js\",\n  _s = $RefreshSig$();\n// AddBook.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport QuillEditor from './QuillEditor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddBook = ({\n  bookId\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const handleSubmit = async () => {\n    const chapterData = {\n      content\n    };\n    const token = Cookies.get('token');\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n    try {\n      const url = bookId ? `http://localhost:5000/api/books/${bookId}/chapters` : 'http://localhost:5000/api/books';\n      const response = await axios.post(url, bookId ? chapterData : {\n        title,\n        author,\n        content\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.status === 201 || response.status === 200) {\n        console.log('Book/Chapter added successfully:', response.data);\n        setTitle('');\n        setAuthor('');\n        setContent('');\n      } else {\n        console.error('Failed to add book/chapter:', response.data);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: bookId ? 'Add a New Chapter' : 'Add a New Book'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !bookId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(QuillEditor, {\n      content: content,\n      setContent: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBook, \"/6m1bnfiU0FGQX0ip3/UZvY4l6o=\");\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["React","useState","axios","Cookies","QuillEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","AddBook","bookId","_s","content","setContent","title","setTitle","author","setAuthor","handleSubmit","chapterData","token","get","console","error","url","response","post","headers","status","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/a/BookSphere/frontend/book-app/src/components/AddBook.js"],"sourcesContent":["// AddBook.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport QuillEditor from './QuillEditor';\n\nconst AddBook = ({ bookId }) => {\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleSubmit = async () => {\n    const chapterData = { content };\n\n    const token = Cookies.get('token');\n\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n\n    try {\n      const url = bookId\n        ? `http://localhost:5000/api/books/${bookId}/chapters`\n        : 'http://localhost:5000/api/books';\n\n      const response = await axios.post(url, bookId ? chapterData : { title, author, content }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.status === 201 || response.status === 200) {\n        console.log('Book/Chapter added successfully:', response.data);\n        setTitle('');\n        setAuthor('');\n        setContent('');\n      } else {\n        console.error('Failed to add book/chapter:', response.data);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>{bookId ? 'Add a New Chapter' : 'Add a New Book'}</h1>\n      {!bookId && (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Author\"\n            value={author}\n            onChange={(e) => setAuthor(e.target.value)}\n          />\n        </>\n      )}\n      <QuillEditor content={content} setContent={setContent} />\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default AddBook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}